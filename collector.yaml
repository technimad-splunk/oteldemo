extensions:
  memory_ballast:
    size_in_percentage: 33
receivers:
  smartagent/postgresql:
    type: postgresql
    host: db
    port: 5432
    connectionString: 'sslmode=disable user=monitor password=pass'
    masterDBName: default_database
    extraMetrics:
      - postgres_conflicts
  prometheus:
    config:
      scrape_configs:
      - job_name: prometheus-generator
        scrape_interval: 10s
        static_configs:
        - targets:
          - postgresql-metrics_prometheus-generator_1:2112
          - postgresql-metrics_prometheus-generator_2:2112
          - postgresql-metrics_prometheus-generator_3:2112
          - postgresql-metrics_prometheus-generator_4:2112
#        metric_relabel_configs:
#        - source_labels:
#          - __name__
#          regex: .*go.*
#          action: drop
processors:
  batch:
  memory_limiter:
    check_interval: 2s
    limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}
  resourcedetection:
    detectors:
    - ec2
    - gce
    - azure
    - ecs
    - system
    override: false
  resourcedetection/internal:
    detectors:
    - ec2
    - gce
    - azure
    - ecs
    - system
    override: true
exporters:
  sapm:
    access_token: ${SPLUNK_ACCESS_TOKEN}
    endpoint: ${SPLUNK_TRACE_URL}
  signalfx:
    access_token: ${SPLUNK_ACCESS_TOKEN}
    api_url: ${SPLUNK_API_URL}
    ingest_url: ${SPLUNK_INGEST_URL}
    sync_host_metadata: true
    correlation:
  splunk_hec:
    token: ${SPLUNK_HEC_TOKEN}
    endpoint: ${SPLUNK_HEC_URL}
    source: otel
    sourcetype: otel
    # Splunk index, optional name of the Splunk index targeted.
    index: "metrics"
    # Maximum HTTP connections to use simultaneously when sending data. Defaults to 100.
    max_connections: 20
    # Whether to disable gzip compression over HTTP. Defaults to false.
    disable_compression: false
    # HTTP timeout when sending data. Defaults to 10s.
    timeout: 10s
    # Whether to skip checking the certificate of the HEC endpoint when sending data over HTTPS. Defaults to false.
    # For this demo, we use a self-signed certificate on the Splunk docker instance, so this flag is set to true.
    insecure_skip_verify: true
#    tls:
#      insecure: true
service:
  extensions:
  - memory_ballast
  pipelines:
    metrics:
      receivers:
      - smartagent/postgresql
      - prometheus
      processors:
      - memory_limiter
      - batch
      - resourcedetection
      exporters:
      - splunk_hec
